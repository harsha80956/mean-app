{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/authentication.service.ts","webpack:///src/app/categories/categories.component.ts","webpack:///src/app/categories/categories.component.html","webpack:///src/app/category.service.ts","webpack:///src/app/email.service.ts","webpack:///src/app/emails/emails.component.ts","webpack:///src/app/emails/emails.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","auth","AppComponent","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AuthGuard","router","next","state","isLoggedIn","navigateByUrl","providedIn","AuthenticationService","http","token","localStorage","setItem","getItem","method","type","user","base$","post","get","headers","Authorization","getToken","request","pipe","data","saveToken","window","removeItem","payload","split","atob","JSON","parse","getUserDetails","exp","Date","now","CategoriesComponent","category_service","category","categoryList","display","getAllCategories","CreateCategory","subscribe","onCloseHandled","err","console","error","GetAllCategory","list","DeleteCategory","createCategory","openModal","CategoryService","delete","selectedID","EmailService","email","categoryId","EmailsComponent","email_service","selectedOption","selectedCategory","emailList","GetAllEmail","DeleteEmail","getEmailsByCategory","emailDetails","CreateEmail","createEmail","HomeComponent","LoginComponent","credentials","password","login","ProfileComponent","profile","details","RegisterComponent","name","register","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { AuthGuard } from \"./auth.guard\";\r\nimport { CategoriesComponent } from \"./categories/categories.component\";\r\nimport { EmailsComponent } from \"./emails/emails.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"register\", component: RegisterComponent },\r\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: \"categories\", component: CategoriesComponent, canActivate: [AuthGuard] },\r\n  { path: \"email\", component: EmailsComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\n\r\nexport class AppComponent {\r\n  constructor(public auth: AuthenticationService) {}\r\n}\r\n","<div class=\"navbar navbar-default\">\r\n  <div class=\"container\">\r\n    <div id=\"navbar-main\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/categories\">Categories</a>\r\n        </li>\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/email\">Email Ids</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li *ngIf=\"!auth.isLoggedIn()\"><a routerLink=\"/login\">Sign in</a></li>\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/profile\">{{ auth.getUserDetails()?.name }}</a>\r\n        </li>\r\n        <li *ngIf=\"auth.isLoggedIn()\"><a (click)=\"auth.logout()\">Logout</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { EmailsComponent } from './emails/emails.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    CategoriesComponent,\r\n    EmailsComponent\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl(\"/\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport interface UserDetails {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  exp: number;\r\n  iat: number;\r\n}\r\n\r\ninterface TokenResponse {\r\n  token: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthenticationService {\r\n  private token: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem(\"mean-token\", token);\r\n    this.token = token;\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem(\"mean-token\");\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  private request(\r\n    method: \"post\" | \"get\",\r\n    type: \"login\" | \"register\" | \"profile\",\r\n    user?: TokenPayload\r\n  ): Observable<any> {\r\n    let base$;\r\n\r\n    if (method === \"post\") {\r\n      base$ = this.http.post(`/api/${type}`, user);\r\n    } else {\r\n      base$ = this.http.get(`/api/${type}`, {\r\n        headers: { Authorization: `Bearer ${this.getToken()}` }\r\n      });\r\n    }\r\n\r\n    const request = base$.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = \"\";\r\n    window.localStorage.removeItem(\"mean-token\");\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split(\".\")[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    return this.request(\"post\", \"register\", user);\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    return this.request(\"post\", \"login\", user);\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.request(\"get\", \"profile\");\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, UserDetails } from \"../authentication.service\";\nimport { CategoryService } from \"../category.service\";\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  category = \"\"\n  categoryList = []\n  display = \"none\";\n  constructor(private category_service: CategoryService) { }\n\n  ngOnInit(): void {\n    this.getAllCategories()\n  }\n\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  \n  createCategory (){\n    this.category_service.CreateCategory(this.category).subscribe(\n      category => {\n        this.getAllCategories()\n        this.onCloseHandled()\n        this.category = \"\"\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  getAllCategories() {\n    this.category_service.GetAllCategory().subscribe(\n      list => {\n        this.categoryList = list;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  deleteCategory(id) {\n    this.category_service.DeleteCategory(id).subscribe(\n      list => {\n        this.getAllCategories()\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n  }\n\n\n}\n","<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{ display: display }\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Category</h4>\n        <button\n          type=\"button\"\n          class=\"close\"\n          aria-label=\"Close\"\n          (click)=\"onCloseHandled()\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Category Name: <input [(ngModel)]=\"category\" />\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-success\"\n          (click)=\"createCategory()\"\n        >\n          Save\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"onCloseHandled()\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-9 col-xs-9 col-lg-9\">\n      <h3 class=\"form-signin-heading\">Categories</h3>\n    </div>\n    <div\n      class=\"col-md-3 col-xs-3 col-lg-3 text-right\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">\n        +\n      </button>\n    </div>\n    <table class=\"table col-md-12\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Categories</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of categoryList; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ item.category }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteCategory(item._id)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface CategoryPayload {\n  category: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private token: string;\n  private selectedID : string\n  constructor(private http: HttpClient, private router: Router) { }\n\n  private getToken(): string {\n    this.token = localStorage.getItem(\"mean-token\");\n    \n    return this.token;\n  }\n\n  private request(\n    method: \"post\" | \"get\" | \"delete\",\n    type:  \"category\",\n    category?: CategoryPayload\n  ): Observable<any> {\n    let base$;\n    if (method === \"post\") {\n      base$ = this.http.post(`/api/${type}`,{\"category\":category},{\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      }, );\n    } else if(method === \"get\") {\n      base$ = this.http.get(`/api/${type}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }else if(method === \"delete\") {\n      base$ = this.http.delete(`/api/${type}/${this.selectedID}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }\n\n    const request = base$.pipe(\n      map((data) => {\n        if (data) {\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public GetAllCategory(): Observable<any> {\n    return this.request(\"get\", \"category\");\n  }\n  public CreateCategory(category): Observable<any> {\n    return this.request(\"post\", \"category\", category);\n}\npublic DeleteCategory(category): Observable<any> {\n  this.selectedID = category\n  return this.request(\"delete\", \"category\", category);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface EmailPayload {\n  category: string;\n  email:string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  private token: string;\n  private selectedID: string;\n  categoryId: any;\n  constructor(private http: HttpClient, private router: Router) { }\n  \n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem(\"mean-token\");\n    }\n    return this.token;\n  }\n\n  private request(\n    method: \"post\" | \"get\" | \"delete\",\n    type:  \"email\",\n    email?: EmailPayload\n  ): Observable<any> {\n    let base$;\n    if (method === \"post\") {\n      base$ = this.http.post(`/api/${type}`, email,{\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      }, );\n    } else if(method === \"get\") {\n      base$ = this.http.get(`/api/${type}/${this.categoryId}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }else if(method === \"delete\") {\n      base$ = this.http.delete(`/api/${type}/${this.selectedID}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }\n\n    const request = base$.pipe(\n      map((data) => {\n        if (data) {\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public GetAllEmail(id): Observable<any> {\n    this.categoryId = id\n    return this.request(\"get\", \"email\");\n  }\n  public CreateEmail(email): Observable<any> {\n    return this.request(\"post\", \"email\", email);\n}\npublic DeleteEmail(categoryId): Observable<any> {\n  this.selectedID = categoryId\n  return this.request(\"delete\", \"email\");\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../category.service';\nimport { EmailService } from '../email.service';\n\n@Component({\n  selector: 'app-emails',\n  templateUrl: './emails.component.html',\n  styleUrls: ['./emails.component.css']\n})\nexport class EmailsComponent implements OnInit {\n  selectedOption: string = \"0\";\n  selectedCategory: string = \"0\";\n  display= \"none\"\n  email :any\n  category:any\n  categoryList = []\n  emailList = []\n  constructor(private category_service: CategoryService,private email_service: EmailService) { \n    this.getAllCategories()\n  }\n\n  ngOnInit(): void {\n  }\n  \n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  getAllCategories() {\n    this.category_service.GetAllCategory().subscribe(\n      list => {\n        this.categoryList = list;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getEmailsByCategory(){\n    if(this.selectedCategory != \"0\" ){\n      this.email_service.GetAllEmail(this.selectedCategory).subscribe(\n        list => {\n          this.emailList = list;\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    }\n  \n    \n  }\n  deleteEmail(id){\n    this.email_service.DeleteEmail(id).subscribe(\n      list => {\n        this.getEmailsByCategory()\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n  }\n  createEmail(){\n    var emailDetails = {\n      category : this.selectedOption,\n      email : this.email\n    }\n    this.email_service.CreateEmail(emailDetails).subscribe(\n      email => {\n        this.getEmailsByCategory()\n        this.onCloseHandled()\n        this.category = \"0\"\n        this.email = \"\"\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    \n  }\n}\n","<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{ display: display }\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Email</h4>\n        <button\n          type=\"button\"\n          class=\"close\"\n          aria-label=\"Close\"\n          (click)=\"onCloseHandled()\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            Category:\n            <select class=\"form-control\" [(ngModel)]=\"selectedOption\">\n              <option value=\"0\">Select Category</option>\n              <option *ngFor=\"let item of categoryList\" [ngValue]=\"item._id\">\n                {{ item.category }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 15px\">\n          <div class=\"col-md-8\">\n            Email Id: <input class=\"form-control\" [(ngModel)]=\"email\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"createEmail()\">\n          Save\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"onCloseHandled()\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-xs-4 col-lg-4\">\n      <h3 class=\"form-signin-heading\">Email</h3>\n    </div>\n    <div\n      class=\"col-md-5 col-xs-4 col-lg-4\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <select\n        class=\"form-control\"\n        [(ngModel)]=\"selectedCategory\"\n        (ngModelChange)=\"getEmailsByCategory()\"\n      >\n        <option value=\"0\">Select Category</option>\n        <option *ngFor=\"let item of categoryList\" [value]=\"item._id\">\n          {{ item.category }}\n        </option>\n      </select>\n    </div>\n    <div\n      class=\"col-md-3 col-xs-3 col-lg-3 text-right\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">\n        +\n      </button>\n    </div>\n\n    <table class=\"table col-md-12\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Categories</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of emailList; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ item.email }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteEmail(item._id)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>Hello there</h1>\r\n\r\n  <p>\r\n    Won't you please <a routerLink=\"/login\">sign in</a> or\r\n    <a routerLink=\"/register\">register</a>?\r\n  </p>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService, TokenPayload } from \"../authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent {\r\n  credentials: TokenPayload = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  login() {\r\n    this.auth.login(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl(\"/categories\");  \r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"form-signin-heading\">Sign in</h1>\r\n      <p class=\"lead\">\r\n        Not a member? Please <a routerLink=\"/register\">register</a> instead.\r\n      </p>\r\n\r\n      <form (submit)=\"login()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-default\">Sign in!</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService, UserDetails } from \"../authentication.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.css\"]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  details: UserDetails;\r\n\r\n  constructor(private auth: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n    this.auth.profile().subscribe(\r\n      user => {\r\n        this.details = user;\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"form-signin-heading\">Your profile</h1>\r\n\r\n      <div class=\"form-horizontal\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\">Full name</label>\r\n          <p class=\"form-control-static\">{{ details?.name }}</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\">Email</label>\r\n          <p class=\"form-control-static\">{{ details?.email }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService, TokenPayload } from \"../authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"]\r\n})\r\nexport class RegisterComponent {\r\n  credentials: TokenPayload = {\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  register() {\r\n    this.auth.register(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl(\"/categories\");\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1>Register</h1>\r\n      <p class=\"lead\">\r\n        Already a member? Please <a routerLink=\"/login\">log in</a> instead.\r\n      </p>\r\n      <form (submit)=\"register()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Full name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            [(ngModel)]=\"credentials.name\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-default\">Register!</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}