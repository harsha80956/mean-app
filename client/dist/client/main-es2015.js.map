{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/authentication.service.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/category.service.ts","./src/app/email.service.ts","./src/app/emails/emails.component.ts","./src/app/emails/emails.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { HomeComponent } from \"./home/home.component\";\r\nimport { LoginComponent } from \"./login/login.component\";\r\nimport { RegisterComponent } from \"./register/register.component\";\r\nimport { ProfileComponent } from \"./profile/profile.component\";\r\nimport { AuthGuard } from \"./auth.guard\";\r\nimport { CategoriesComponent } from \"./categories/categories.component\";\r\nimport { EmailsComponent } from \"./emails/emails.component\";\r\n\r\nconst routes: Routes = [\r\n  { path: \"\", component: HomeComponent },\r\n  { path: \"login\", component: LoginComponent },\r\n  { path: \"register\", component: RegisterComponent },\r\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuard] },\r\n  { path: \"categories\", component: CategoriesComponent, canActivate: [AuthGuard] },\r\n  { path: \"email\", component: EmailsComponent, canActivate: [AuthGuard] }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\n\r\nexport class AppComponent {\r\n  constructor(public auth: AuthenticationService) {}\r\n}\r\n","<div class=\"navbar navbar-default\">\r\n  <div class=\"container\">\r\n    <div id=\"navbar-main\">\r\n      <ul class=\"nav navbar-nav\">\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/categories\">Categories</a>\r\n        </li>\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/email\">Email Ids</a>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li *ngIf=\"!auth.isLoggedIn()\"><a routerLink=\"/login\">Sign in</a></li>\r\n        <li *ngIf=\"auth.isLoggedIn()\">\r\n          <a routerLink=\"/profile\">{{ auth.getUserDetails()?.name }}</a>\r\n        </li>\r\n        <li *ngIf=\"auth.isLoggedIn()\"><a (click)=\"auth.logout()\">Logout</a></li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from \"@angular/platform-browser\";\r\nimport { NgModule } from \"@angular/core\";\r\n\r\nimport { AppRoutingModule } from \"./app-routing.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { EmailsComponent } from './emails/emails.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    CategoriesComponent,\r\n    EmailsComponent\r\n  ],\r\n  imports: [BrowserModule, AppRoutingModule, FormsModule, HttpClientModule],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router\r\n} from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthenticationService } from \"./authentication.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (!this.auth.isLoggedIn()) {\r\n      this.router.navigateByUrl(\"/\");\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport interface UserDetails {\r\n  _id: string;\r\n  email: string;\r\n  name: string;\r\n  exp: number;\r\n  iat: number;\r\n}\r\n\r\ninterface TokenResponse {\r\n  token: string;\r\n}\r\n\r\nexport interface TokenPayload {\r\n  email: string;\r\n  password: string;\r\n  name?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthenticationService {\r\n  private token: string;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  private saveToken(token: string): void {\r\n    localStorage.setItem(\"mean-token\", token);\r\n    this.token = token;\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (!this.token) {\r\n      this.token = localStorage.getItem(\"mean-token\");\r\n    }\r\n    return this.token;\r\n  }\r\n\r\n  private request(\r\n    method: \"post\" | \"get\",\r\n    type: \"login\" | \"register\" | \"profile\",\r\n    user?: TokenPayload\r\n  ): Observable<any> {\r\n    let base$;\r\n\r\n    if (method === \"post\") {\r\n      base$ = this.http.post(`/api/${type}`, user);\r\n    } else {\r\n      base$ = this.http.get(`/api/${type}`, {\r\n        headers: { Authorization: `Bearer ${this.getToken()}` }\r\n      });\r\n    }\r\n\r\n    const request = base$.pipe(\r\n      map((data: TokenResponse) => {\r\n        if (data.token) {\r\n          this.saveToken(data.token);\r\n        }\r\n        return data;\r\n      })\r\n    );\r\n\r\n    return request;\r\n  }\r\n\r\n  public logout(): void {\r\n    this.token = \"\";\r\n    window.localStorage.removeItem(\"mean-token\");\r\n    this.router.navigateByUrl(\"/\");\r\n  }\r\n\r\n  public getUserDetails(): UserDetails {\r\n    const token = this.getToken();\r\n    let payload;\r\n    if (token) {\r\n      payload = token.split(\".\")[1];\r\n      payload = window.atob(payload);\r\n      return JSON.parse(payload);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isLoggedIn(): boolean {\r\n    const user = this.getUserDetails();\r\n    if (user) {\r\n      return user.exp > Date.now() / 1000;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public register(user: TokenPayload): Observable<any> {\r\n    return this.request(\"post\", \"register\", user);\r\n  }\r\n\r\n  public login(user: TokenPayload): Observable<any> {\r\n    return this.request(\"post\", \"login\", user);\r\n  }\r\n\r\n  public profile(): Observable<any> {\r\n    return this.request(\"get\", \"profile\");\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService, UserDetails } from \"../authentication.service\";\nimport { CategoryService } from \"../category.service\";\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n  category = \"\"\n  categoryList = []\n  display = \"none\";\n  constructor(private category_service: CategoryService) { }\n\n  ngOnInit(): void {\n    this.getAllCategories()\n  }\n\n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  \n  createCategory (){\n    this.category_service.CreateCategory(this.category).subscribe(\n      category => {\n        this.getAllCategories()\n        this.onCloseHandled()\n        this.category = \"\"\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n\n  getAllCategories() {\n    this.category_service.GetAllCategory().subscribe(\n      list => {\n        this.categoryList = list;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  deleteCategory(id) {\n    this.category_service.DeleteCategory(id).subscribe(\n      list => {\n        this.getAllCategories()\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n  }\n\n\n}\n","<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{ display: display }\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Category</h4>\n        <button\n          type=\"button\"\n          class=\"close\"\n          aria-label=\"Close\"\n          (click)=\"onCloseHandled()\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        Category Name: <input [(ngModel)]=\"category\" />\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-success\"\n          (click)=\"createCategory()\"\n        >\n          Save\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"onCloseHandled()\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-9 col-xs-9 col-lg-9\">\n      <h3 class=\"form-signin-heading\">Categories</h3>\n    </div>\n    <div\n      class=\"col-md-3 col-xs-3 col-lg-3 text-right\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">\n        +\n      </button>\n    </div>\n    <table class=\"table col-md-12\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Categories</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of categoryList; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ item.category }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteCategory(item._id)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface CategoryPayload {\n  category: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private token: string;\n  private selectedID : string\n  constructor(private http: HttpClient, private router: Router) { }\n\n  private getToken(): string {\n    this.token = localStorage.getItem(\"mean-token\");\n    \n    return this.token;\n  }\n\n  private request(\n    method: \"post\" | \"get\" | \"delete\",\n    type:  \"category\",\n    category?: CategoryPayload\n  ): Observable<any> {\n    let base$;\n    if (method === \"post\") {\n      base$ = this.http.post(`/api/${type}`,{\"category\":category},{\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      }, );\n    } else if(method === \"get\") {\n      base$ = this.http.get(`/api/${type}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }else if(method === \"delete\") {\n      base$ = this.http.delete(`/api/${type}/${this.selectedID}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }\n\n    const request = base$.pipe(\n      map((data) => {\n        if (data) {\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public GetAllCategory(): Observable<any> {\n    return this.request(\"get\", \"category\");\n  }\n  public CreateCategory(category): Observable<any> {\n    return this.request(\"post\", \"category\", category);\n}\npublic DeleteCategory(category): Observable<any> {\n  this.selectedID = category\n  return this.request(\"delete\", \"category\", category);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Router } from \"@angular/router\";\nimport { Observable } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\nexport interface EmailPayload {\n  category: string;\n  email:string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmailService {\n  private token: string;\n  private selectedID: string;\n  categoryId: any;\n  constructor(private http: HttpClient, private router: Router) { }\n  \n  private getToken(): string {\n    if (!this.token) {\n      this.token = localStorage.getItem(\"mean-token\");\n    }\n    return this.token;\n  }\n\n  private request(\n    method: \"post\" | \"get\" | \"delete\",\n    type:  \"email\",\n    email?: EmailPayload\n  ): Observable<any> {\n    let base$;\n    if (method === \"post\") {\n      base$ = this.http.post(`/api/${type}`, email,{\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      }, );\n    } else if(method === \"get\") {\n      base$ = this.http.get(`/api/${type}/${this.categoryId}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }else if(method === \"delete\") {\n      base$ = this.http.delete(`/api/${type}/${this.selectedID}`, {\n        headers: { Authorization: `Bearer ${this.getToken()}` }\n      });\n    }\n\n    const request = base$.pipe(\n      map((data) => {\n        if (data) {\n        }\n        return data;\n      })\n    );\n\n    return request;\n  }\n\n  public GetAllEmail(id): Observable<any> {\n    this.categoryId = id\n    return this.request(\"get\", \"email\");\n  }\n  public CreateEmail(email): Observable<any> {\n    return this.request(\"post\", \"email\", email);\n}\npublic DeleteEmail(categoryId): Observable<any> {\n  this.selectedID = categoryId\n  return this.request(\"delete\", \"email\");\n}\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from '../category.service';\nimport { EmailService } from '../email.service';\n\n@Component({\n  selector: 'app-emails',\n  templateUrl: './emails.component.html',\n  styleUrls: ['./emails.component.css']\n})\nexport class EmailsComponent implements OnInit {\n  selectedOption: string = \"0\";\n  selectedCategory: string = \"0\";\n  display= \"none\"\n  email :any\n  category:any\n  categoryList = []\n  emailList = []\n  constructor(private category_service: CategoryService,private email_service: EmailService) { \n    this.getAllCategories()\n  }\n\n  ngOnInit(): void {\n  }\n  \n  openModal() {\n    this.display = \"block\";\n  }\n  onCloseHandled() {\n    this.display = \"none\";\n  }\n  getAllCategories() {\n    this.category_service.GetAllCategory().subscribe(\n      list => {\n        this.categoryList = list;\n      },\n      err => {\n        console.error(err);\n      }\n    );\n  }\n  getEmailsByCategory(){\n    if(this.selectedCategory != \"0\" ){\n      this.email_service.GetAllEmail(this.selectedCategory).subscribe(\n        list => {\n          this.emailList = list;\n        },\n        err => {\n          console.error(err);\n        }\n      );\n    }\n  \n    \n  }\n  deleteEmail(id){\n    this.email_service.DeleteEmail(id).subscribe(\n      list => {\n        this.getEmailsByCategory()\n      },\n      err => {\n        console.error(err);\n      }\n    );\n\n  }\n  createEmail(){\n    var emailDetails = {\n      category : this.selectedOption,\n      email : this.email\n    }\n    this.email_service.CreateEmail(emailDetails).subscribe(\n      email => {\n        this.getEmailsByCategory()\n        this.onCloseHandled()\n        this.category = \"0\"\n        this.email = \"\"\n      },\n      err => {\n        console.error(err);\n      }\n    );\n    \n  }\n}\n","<div class=\"modal\" tabindex=\"-1\" role=\"dialog\" [ngStyle]=\"{ display: display }\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h4 class=\"modal-title\">Create Email</h4>\n        <button\n          type=\"button\"\n          class=\"close\"\n          aria-label=\"Close\"\n          (click)=\"onCloseHandled()\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body\">\n        <div class=\"row\">\n          <div class=\"col-md-8\">\n            Category:\n            <select class=\"form-control\" [(ngModel)]=\"selectedOption\">\n              <option value=\"0\">Select Category</option>\n              <option *ngFor=\"let item of categoryList\" [ngValue]=\"item._id\">\n                {{ item.category }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class=\"row\" style=\"padding-top: 15px\">\n          <div class=\"col-md-8\">\n            Email Id: <input class=\"form-control\" [(ngModel)]=\"email\" />\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"createEmail()\">\n          Save\n        </button>\n        <button\n          type=\"button\"\n          class=\"btn btn-default\"\n          (click)=\"onCloseHandled()\"\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-4 col-xs-4 col-lg-4\">\n      <h3 class=\"form-signin-heading\">Email</h3>\n    </div>\n    <div\n      class=\"col-md-5 col-xs-4 col-lg-4\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <select\n        class=\"form-control\"\n        [(ngModel)]=\"selectedCategory\"\n        (ngModelChange)=\"getEmailsByCategory()\"\n      >\n        <option value=\"0\">Select Category</option>\n        <option *ngFor=\"let item of categoryList\" [value]=\"item._id\">\n          {{ item.category }}\n        </option>\n      </select>\n    </div>\n    <div\n      class=\"col-md-3 col-xs-3 col-lg-3 text-right\"\n      style=\"margin-top: 20px; margin-bottom: 10px\"\n    >\n      <button type=\"button\" class=\"btn btn-primary\" (click)=\"openModal()\">\n        +\n      </button>\n    </div>\n\n    <table class=\"table col-md-12\">\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Categories</th>\n          <th scope=\"col\">Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let item of emailList; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ item.email }}</td>\n          <td>\n            <button class=\"btn btn-danger\" (click)=\"deleteEmail(item._id)\">\n              Delete\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <h1>Hello there</h1>\r\n\r\n  <p>\r\n    Won't you please <a routerLink=\"/login\">sign in</a> or\r\n    <a routerLink=\"/register\">register</a>?\r\n  </p>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService, TokenPayload } from \"../authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent {\r\n  credentials: TokenPayload = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  login() {\r\n    this.auth.login(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl(\"/categories\");  \r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"form-signin-heading\">Sign in</h1>\r\n      <p class=\"lead\">\r\n        Not a member? Please <a routerLink=\"/register\">register</a> instead.\r\n      </p>\r\n\r\n      <form (submit)=\"login()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-default\">Sign in!</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthenticationService, UserDetails } from \"../authentication.service\";\r\n\r\n@Component({\r\n  templateUrl: \"./profile.component.html\",\r\n  styleUrls: [\"./profile.component.css\"]\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  details: UserDetails;\r\n\r\n  constructor(private auth: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n    this.auth.profile().subscribe(\r\n      user => {\r\n        this.details = user;\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1 class=\"form-signin-heading\">Your profile</h1>\r\n\r\n      <div class=\"form-horizontal\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\">Full name</label>\r\n          <p class=\"form-control-static\">{{ details?.name }}</p>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label class=\"col-sm-3 control-label\">Email</label>\r\n          <p class=\"form-control-static\">{{ details?.email }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component } from \"@angular/core\";\r\nimport { AuthenticationService, TokenPayload } from \"../authentication.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  templateUrl: \"./register.component.html\",\r\n  styleUrls: [\"./register.component.css\"]\r\n})\r\nexport class RegisterComponent {\r\n  credentials: TokenPayload = {\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\"\r\n  };\r\n\r\n  constructor(private auth: AuthenticationService, private router: Router) {}\r\n\r\n  register() {\r\n    this.auth.register(this.credentials).subscribe(\r\n      () => {\r\n        this.router.navigateByUrl(\"/categories\");\r\n      },\r\n      err => {\r\n        console.error(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <h1>Register</h1>\r\n      <p class=\"lead\">\r\n        Already a member? Please <a routerLink=\"/login\">log in</a> instead.\r\n      </p>\r\n      <form (submit)=\"register()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"name\">Full name</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            [(ngModel)]=\"credentials.name\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            class=\"form-control\"\r\n            name=\"email\"\r\n            placeholder=\"Enter email\"\r\n            [(ngModel)]=\"credentials.email\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            [(ngModel)]=\"credentials.password\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-default\">Register!</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}